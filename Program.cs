using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;

namespace Base_C_Lesson_5
{
    class Program
    {
        static void Main(string[] args)
        {

            // Задача 1.
            //Task1();

            // Задача 2.
            //Task2();

            // Задача 3.
            //Task3();

            // Задача 4.
            Task4();

            // Задача 5.
            //Task5();



        }

        /*
        * Задание 1.
        * Дан  целочисленный  массив  из 20 элементов.  
        * Элементы  массива  могут принимать  целые  значения  от –10 000 до 10 000 включительно. 
        * Заполнить случайными числами.  Написать программу, позволяющую найти и вывести количество пар элементов массива, в которых только одно число делится на 3. 
        * В данной задаче под парой подразумевается два подряд идущих элемента массива. 
        * Например, для массива из пяти элементов: 6; 2; 9; –3; 6 ответ — 2. 
        */
        static void Task1()
        {
            Console.Write("\n------------------------------------------------------\n");
            string description = "Задание 1\n";
            description += "Создать программу, которая будет проверять корректность ввода логина. Корректным логином будет строка от 2 до 10 символов, содержащая только буквы латинского алфавита или цифры, при этом цифра не может быть первой\n";
            Console.Write(description);
            Console.Write("------------------------------------------------------\n");

            // Запрос логина
            Console.WriteLine("Введите логин:");
            string login = Console.ReadLine();

            // Проверка
            var account = new Account();
            var allow = account.checkLogin(login);

            Console.WriteLine("\nРезультат:");
            if(allow)
            {
                Console.WriteLine("В логине ошибок нет.");
            } else
            {
                foreach (var err in account.errors) Console.WriteLine(err);
            }
            Console.ReadKey();
        }


        /*
        * Задание 2.
            Разработать класс Message, содержащий следующие статические методы для обработки текста:
            а) Вывести только те слова сообщения, которые содержат не более n букв.
            б) Удалить из сообщения все слова, которые заканчиваются на заданный символ.
            в) Найти самое длинное слово сообщения.
            г) Сформировать строку с помощью StringBuilder из самых длинных слов сообщения.
            Продемонстрируйте работу программы на текстовом файле с вашей программой.
        */
        static void Task2()
        {
            Console.Write("\n------------------------------------------------------\n");
            string description = "Задание 2\n";
            description += "Разработать класс Message, содержащий следующие статические методы для обработки текста:\n";
            description += "а) Вывести только те слова сообщения, которые содержат не более n букв.\n";
            description += "б) Удалить из сообщения все слова, которые заканчиваются на заданный символ.\n";
            description += "в) Найти самое длинное слово сообщения.\n";
            description += "г) Сформировать строку с помощью StringBuilder из самых длинных слов сообщения.\n";
            description += "д) ***Создать метод, который производит частотный анализ текста.В качестве параметра в него передается массив слов и текст, в качестве результата метод возвращает сколько раз каждое из слов массива входит в этот текст. Здесь требуется использовать класс Dictionary.\n";
            description += "Продемонстрируйте работу программы на текстовом файле с вашей программой.\n";
            Console.Write(description);
            Console.Write("------------------------------------------------------\n");

            // Запрос текста из файла
            string fPath = @"./text.txt";
            using (StreamReader sr = new StreamReader(fPath, System.Text.Encoding.UTF8))
            {
                
                string text = sr.ReadToEnd();

                Console.WriteLine("\nРезультат:");
                // а.
                Console.WriteLine("\nПоиск слов максимум 4 символа:");
                var words = Message.searchWords(text, 4);
                foreach (var word in words) Console.WriteLine(word);

                // б.
                char chA = 'я';
                string newText = Message.clearText(text, chA);
                Console.WriteLine("\nУдалить из сообщения все слова, которые заканчиваются на символ "+ chA + ":");
                Console.WriteLine(newText);

                // в.
                string bWord = Message.biggerWord(text);
                Console.WriteLine("\nПоиск самого длинного слова:");
                Console.WriteLine(bWord);

                // г. (не понял смысл, в решении просто сделал сортировку по длине слова и составил текст в обратном порядке)
                List<string> bWords = Message.biggerWords(text);
                StringBuilder sb = new StringBuilder();
                foreach (var word in bWords) sb.Append(word+" ");
                Console.WriteLine("\nСоставляем строку через StringBuilder из самых больших слов:");
                Console.WriteLine(sb.ToString());

                // д.
                Console.WriteLine("\nЧастотный анализ текста:");
                var fWords = Message.muchWords(text, new string[] { "привет", "точки", "после", "итерации" });
                foreach (KeyValuePair<string, int> val in fWords) Console.WriteLine(val.Key+" = "+val.Value);
            }
            Console.ReadKey();
        }


        /*
        * Задание 3.
        * Дан  целочисленный  массив  из 20 элементов.  
        * Элементы  массива  могут принимать  целые  значения  от –10 000 до 10 000 включительно. 
        * Заполнить случайными числами.  Написать программу, позволяющую найти и вывести количество пар элементов массива, в которых только одно число делится на 3. 
        * В данной задаче под парой подразумевается два подряд идущих элемента массива. 
        * Например, для массива из пяти элементов: 6; 2; 9; –3; 6 ответ — 2. 
         */
        static void Task3()
        {
            Console.Write("\n------------------------------------------------------\n");
            string description = "Задание 3\n";
            description += "Для двух строк написать метод, определяющий, является ли одна строка перестановкой другой. Регистр можно не учитывать\n";
            description += "а) с использованием методов C#;\n";
            description += "б) *разработав собственный алгоритм.\n";
            Console.Write(description);
            Console.Write("------------------------------------------------------\n");

            // Данные
            string str = "написать метод";
            string str2 = "намисать петод";

            Console.WriteLine("\nРезультат:");
            // а) Методы C#
            if (CompareString.IsAnagramBase(str, str2))
                Console.WriteLine("\nСтрока \""+ str2 + "\" является перестановкой для строки \""+str+"\"");
            else
                Console.WriteLine("\nСтрока \"" + str2 + "\" НЕ является перестановкой для строки \"" + str + "\"");

            // б) свой велосипед
            if (CompareString.IsAnagram(str, str2))
                Console.WriteLine("\nСтрока \"" + str2 + "\" является перестановкой для строки \"" + str + "\"");
            else
                Console.WriteLine("\nСтрока \"" + str2 + "\" НЕ является перестановкой для строки \"" + str + "\"");
            
            
            Console.ReadKey();
        }


        /*
        * Задание 4.
        * Требуется написать как можно более эффективную программу, которая будет выводить на экран фамилии и имена трёх худших по среднему баллу учеников.Если среди остальных есть ученики, набравшие тот же средний балл, что и один из трёх худших, следует вывести и их фамилии и имена.
        */
        static void Task4()
        {
            Console.Write("\n------------------------------------------------------\n");
            string description = "Задание 4\n";
            description += "Задача ЕГЭ\n";
            description += "Требуется написать как можно более эффективную программу, которая будет выводить на экран фамилии и имена трёх худших по среднему баллу учеников.Если среди остальных есть ученики, набравшие тот же средний балл, что и один из трёх худших, следует вывести и их фамилии и имена.\n";
            Console.Write(description);
            Console.Write("------------------------------------------------------\n");

            // Берем за основу, что данные приходят из базы данных в целости и сохранности, дополнительно их не проверяем.
            var students = Students.GetAverageGrades();
            Students.showTheWorstStudents(students, 3);
            Console.ReadKey();
        }


        /*
        * Задание 5.
        **Написать игру «Верю. Не верю». В файле хранятся вопрос и ответ, правда это или нет. Например: «Шариковую ручку изобрели в древнем Египте», «Да». Компьютер загружает эти данные, случайным образом выбирает 5 вопросов и задаёт их игроку. Игрок отвечает Да или Нет на каждый вопрос и набирает баллы за каждый правильный ответ. Список вопросов ищите во вложении или воспользуйтесь интернетом.        
        */
        static void Task5()
        {
            Console.Write("\n------------------------------------------------------\n");
            string description = "Задание 5\n";
            description += "Написать игру «Верю. Не верю»\n";
            description += "В файле хранятся вопрос и ответ, правда это или нет. Например: «Шариковую ручку изобрели в древнем Египте», «Да». Компьютер загружает эти данные, случайным образом выбирает 5 вопросов и задаёт их игроку. Игрок отвечает Да или Нет на каждый вопрос и набирает баллы за каждый правильный ответ. Список вопросов ищите во вложении или воспользуйтесь интернетом.\n";
            Console.Write(description);
            Console.Write("------------------------------------------------------\n");

            // Берем за основу, что данные приходят из базы данных в целости и сохранности, дополнительно их не проверяем.
            
            // Вопрос - ответ (Да/Нет)
        }

    }
}
